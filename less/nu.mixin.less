.overflow() {
  overflow: hidden;
  white-space: nowrap;
}

.overflow(@overflow) when (iskeyword(@overflow)) {
  .overflow();
  text-overflow: @overflow;
}

.anchor() {
  text-decoration: none;
}

.anchor(@size) when (isnumber(@size)) {
  .anchor();
  font-size: @size;
}

.anchor(@size; @height) when (isnumber(@height)) {
  .anchor(@size);
  line-height: @height;
}

.anchor(@size; @color) when (iscolor(@color)) {
  .anchor(@size);
  color: @color;
}

.anchor(@size; @color; @overflow) when (iscolor(@color)) and (iskeyword(@overflow)) {
  .anchor(@size, @color);
  .overflow(@overflow);
}

.anchor(@size; @height; @color) when (iscolor(@color)) {
  .anchor(@size; @height);
  color: @color;
}

.anchor(@size; @height; @color; @overflow) when (iskeyword(@overflow)) {
  .anchor(@size, @height, @color);
  .overflow(@overflow);
}

.padding(@top; @right; @bottom; @left) {
  padding: @top, @right, @bottom, @left;
}

.padding(horizontal; @padding) {
  padding: @padding 0;
}

.padding(horizontal; @top; @bottom) {
  padding: @top 0 @bottom 0;
}

.padding(vertical; @padding) {
  padding: 0 @padding;
}

.padding(vertical; @right; @left) {
  padding: 0 @right 0 @left;
}

.browser(@prop; @value) {
  @{prop}: @value; // Opera/IE 8+
  -moz-@{prop}: @value; // Firefox, other Gecko
  -webkit-@{prop}: @value; // Safari/Chrome, other WebKit
}

.box-sizing(@value:border-box) {
  .browser(box-sizing, @value);
}

.box-shadow(@value:border-box) {
  .browser(box-shadow, @value);
}

.unselectable() {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.box-sizing(@sizing) {
  -webkit-box-sizing: @sizing;
  -moz-box-sizing:    @sizing;
  box-sizing:         @sizing;
}