//nu.bootstrap.less
@import "../nu.theme.less";
@import "../nu.mixin.less";
@import "bs.variables.less";
@import "bootstrap.mixins.less";

.nu {
  &.button.press {
    #nu > #theme > .pb(@btn-default-color, @btn-default-border, @font-size-large);
    &.primary { #nu > #theme > .pb(@brand-primary, @btn-primary-border); }
    &.success { #nu > #theme > .pb(@brand-success, @btn-success-border); }
    &.info { #nu > #theme > .pb(@brand-info, @btn-info-border); }
    &.warning { #nu > #theme > .pb(@brand-warning, @btn-warning-border); }
    &.danger { #nu > #theme > .pb(@brand-danger, @btn-danger-border); }
    &[disabled] { opacity: 0.5; }
  }

  &.switch {
    #nu > #theme > .switch({
      #nu > #mixin > .color(@btn-default-border, @btn-primary-color);
    },
    {
      #nu > #mixin > .color(@btn-default-color, @btn-default-border);
    }, 
    @font-size-base);
    #nu > #theme > .switch-handle(circle, @btn-default-color, @btn-default-border, @font-size-base);
    &.primary { 
      #nu > #theme > .switch({
        #nu > #mixin > .color(@btn-primary-bg, @btn-primary-color);
      },
      {
        #nu > #mixin > .color(@btn-primary-border, @btn-primary-color);
      });
      #nu > #theme > .switch-handle(@btn-primary-color, darken(@btn-primary-border, 10%));
   
    }
    &.success { 
      #nu > #theme > .switch({
        #nu > #mixin > .color(@btn-success-bg, @btn-success-color);
      },
      {
        #nu > #mixin > .color(@btn-success-border, @btn-success-color);
      });
      #nu > #theme > .switch-handle(@btn-success-color, darken(@btn-success-border, 10%));
    }
    &.info { 
      #nu > #theme > .switch({
        #nu > #mixin > .color(@btn-info-bg, @btn-info-color);
      },
      {
        #nu > #mixin > .color(@btn-info-border, @btn-info-color);
      });
      #nu > #theme > .switch-handle(@btn-info-color, darken(@btn-info-border, 10%));
    }
    &.warning { 
      #nu > #theme > .switch({
        #nu > #mixin > .color(@btn-warning-bg, @btn-warning-color);
      },
      {
        #nu > #mixin > .color(@btn-warning-border, @btn-warning-color);
      });
      #nu > #theme > .switch-handle(@btn-warning-color, darken(@btn-warning-border, 10%));
    }
    &.danger { 
      #nu > #theme > .switch({
        #nu > #mixin > .color(@btn-danger-bg, @btn-danger-color);
      },
      {
        #nu > #mixin > .color(@btn-danger-border, @btn-danger-color);
      });
      #nu > #theme > .switch-handle(@btn-danger-color, darken(@btn-danger-border, 10%));
    }
    &[disabled] { opacity: 0.5; }
  }
  
  &.list {
    &.form-control {
      .list-form-control(@padding-base-vertical, @padding-base-horizontal, @font-size-base, @line-height-base);
      height: auto;
      display: inherit;

      &.input-lg {
        .list-form-control(@padding-large-vertical, @padding-large-horizontal, @font-size-large, @line-height-large);
      }
      &.input-sm {
        .list-form-control(@padding-small-vertical, @padding-small-horizontal, @font-size-small, @line-height-small);
      }
    }

    &.file {
      &.single {
        .item {
          #nu > #mixin > .overflow(text, ellipsis);
        }
      }

      .buffer {
        @padding-vertical: (@padding-base-vertical + 3px); //3px because of item margin
        padding: @padding-vertical @padding-base-horizontal (@padding-vertical - 1px);
        label {
          margin: 0;
        }
      }
    }
  }

  &.wrap {
    .w-view {
      border: 1px solid transparent;
      padding: @padding-base-vertical @padding-base-horizontal;
      bottom: 0px;
      overflow: auto;
    }

    &.input-group {
      display: table !important;
    }
  }
}

.form-inline {
  .nu.wrap {
    display: inline-block;
  }
}